name: Tests
on:
  push:
    branches:
      - master
      - develop
      - client/php
  pull_request:
    branches: 
      - master

jobs:
#  yarn:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 18
#      - uses: actions/cache@v3
#        with:
#          path: |
#            .yarn/cache
#            workspaces/puth/.cache
#          key: node-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: node
#      - name: yarn install
#        run: yarn
#
#  test-puth-node:
#    needs: yarn
#    name: 'Test Puth (Node.js v${{ matrix.node-version }})'
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version:
#          - 14
#          - 16
#          - 18
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: '${{ matrix.node-version }}'
#      - name: 'Cache'
#        uses: actions/cache/restore@v3
#        with:
#          path: |
#            .yarn/cache
#            workspaces/puth/.cache
#          key: node-${{ hashFiles('**/yarn.lock') }}
#      - run: yarn
#      - run: lerna run build && lerna run postbuild
#      - run: lerna run test
#
#  build-test-image:
#    needs: yarn
#    name: 'Build test image'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 18
#      - uses: actions/cache/restore@v3
#        with:
#          path: |
#            .yarn/cache
#            workspaces/puth/.cache
#          key: node-${{ hashFiles('**/yarn.lock') }}
#      - run: yarn
#      - run: lerna run build && lerna run postbuild
#      - name: Image
#        run: |
#          yarn workspaces focus --production puth
#          rm -rf workspaces/puth/node_modules
#          mv node_modules workspaces/puth
#          cd workspaces/puth
#          docker build --file Dockerfile --tag puth-test-image .
#      - name: Test image
#        run: |
#          yarn
#          docker run -d -p 7345:7345 puth-test-image
#          PUTH_URL=http://127.0.0.1:7345 lerna run test:only:remote
#          docker save --output=/tmp/puth-test-image.tar puth-test-image
##          docker save puth-test-image | gzip > /tmp/puth-test-image.tar.gz
#      - uses: actions/upload-artifact@v2
#        with:
#          name: puth-test-image
#          path: /tmp/puth-test-image.tar.gz
#
#  php-client:
#    needs: build-test-image
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: true
#      matrix:
##        php: [ 8.0, 8.1, 8.2 ]
#        php: [ 8.1 ]
#    defaults:
#      run:
#        working-directory: workspaces/clients/php/client
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: puth-test-image
#          path: /tmp
#      - run: docker load --input /tmp/puth-test-image.tar.gz
#        
#      - name: Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#        
#      - name: Cache composer dependencies
#        uses: actions/cache@v3
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: composer-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('workspaces/clients/php/laravel/composer.json') }}
#          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-
#          
#      - run: composer update --prefer-stable --no-interaction --no-suggest
#      - run: |
#          docker run -d -p 7345:7345 puth-test-image
#          ./vendor/bin/phpunit
    
  test:
    runs-on: ubuntu-latest
    steps:
      - run: |
          docker pull seuh/puth:0.6.2
          docker save seuh/puth:0.6.2 | gzip > /tmp/puth-test-image.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: puth-test-image
          path: /tmp/puth-test-image.tar.gz
    
  composer-laravel:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ 8.1 ]
        laravel: [ 9.* ]
    defaults:
      run:
        working-directory: workspaces/clients/php/workspaces/laravel
      
    name: PHP:${{ matrix.php }} / Laravel:${{ matrix.laravel }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - uses: actions/download-artifact@v2
        with:
          name: puth-test-image
          path: /tmp
      - run: docker load --input /tmp/puth-test-image.tar.gz

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, libxml, mbstring, intl, zip, pdo_sqlite
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('workspaces/clients/php/workspaces/laravel/composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: composer update --prefer-stable --no-interaction --no-suggest
#            composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --dev
#          composer update --prefer-stable --no-interaction --no-suggest
#        - name: Run Unit tests
#          run: vendor/bin/phpunit --testsuite Unit
#          env:
#            RUNNING_IN_CI: true
#        - name: Setup dusk/chrome
#          run: vendor/bin/dusk-updater detect --no-interaction
      - name: Run tests
        run: |
          cp .env.example .env
          php artisan serve > storage/logs/server.log 2>&1 &
          docker run -d -p 7345:7345 seuh/puth:0.6.2
          php artisan test
        env:
          RUNNING_IN_CI: true
    
#  php-client:
#    name: 'php/client'
#    needs: php
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: puth-test-image
#          path: /tmp
#      - run: |
#          docker load --input /tmp/puth-test-image.tar
#          docker image ls -a
#
#  php-laravel:
#    name: 'php/laravel'
#    needs: php

#  test-client-laravel:
#    needs: build-test-image
#    runs-on: ubuntu-latest
#    steps:
##      - name: Set up Docker Buildx
##        uses: docker/setup-buildx-action@v1
#      - uses: actions/download-artifact@v2
#        with:
#          name: puth-test-image
#          path: /tmp
#      - run: |
#          docker load --input /tmp/puth-test-image.tar
#          docker image ls -a
