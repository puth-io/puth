name: Tests
on:
  push:
    branches:
      - master
      - develop
      - client/php
  pull_request:
    branches: 
      - master

jobs:
  yarn:
    runs-on: ubuntu-latest
    name: 'yarn cache'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            workspaces/puth/.cache
          key: node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: node
      - name: yarn install
        run: yarn

  test-puth-node:
    needs: yarn
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14
          - 16
          - 18
    name: puth | Node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node-version }}'
      - name: 'Cache'
        uses: actions/cache/restore@v3
        with:
          path: |
            .yarn/cache
            workspaces/puth/.cache
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: lerna run build && lerna run postbuild
      - run: lerna run test

  build-test-image:
    needs: yarn
    name: 'Build test image'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache/restore@v3
        with:
          path: |
            .yarn/cache
            workspaces/puth/.cache
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: lerna run build && lerna run postbuild
      - name: Image
        run: |
          yarn workspaces focus --production puth
          rm -rf workspaces/puth/node_modules
          mv node_modules workspaces/puth
          cd workspaces/puth
          docker build --file Dockerfile --tag puth-test-image .
      - name: Test image
        run: |
          yarn
          docker run -d -p 7345:7345 puth-test-image
          timeout 10 bash -c 'until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:7345); do printf "." && sleep 1; done'
          PUTH_URL=http://127.0.0.1:7345 lerna run test:only:remote
          docker save puth-test-image | gzip > /tmp/puth-test-image.tar
      - uses: actions/upload-artifact@v3
        with:
          name: puth-test-image
          path: /tmp/puth-test-image.tar

  php-client:
    needs: build-test-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ '8.0', 8.1, 8.2 ]
    defaults:
      run:
        working-directory: workspaces/clients/php/client
    name: php/client | PHP ${{ matrix.php }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: puth-test-image
          path: /tmp
      - run: docker load --input /tmp/puth-test-image.tar

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('workspaces/clients/php/laravel/composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - run: composer update --prefer-stable --no-interaction --no-suggest
      - run: |
          docker run --name puth-test-image -d -p 7345:7345 puth-test-image
          timeout 10 bash -c 'until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:7345); do printf "." && sleep 1; done'
          ./vendor/bin/phpunit
    
  php-laravel:
    needs: build-test-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [ '8.0', 8.1, 8.2 ]
        laravel: [ 9.* ]
    defaults:
      run:
        working-directory: workspaces/clients/php/workspaces/laravel
      
    name: php/laravel | PHP ${{ matrix.php }}, Laravel ${{ matrix.laravel }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - uses: actions/download-artifact@v3
        with:
          name: puth-test-image
          path: /tmp
      - run: docker load --input /tmp/puth-test-image.tar

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, libxml, mbstring, intl, zip, pdo_sqlite
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('workspaces/clients/php/workspaces/laravel/composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: composer update --prefer-stable --no-interaction --no-suggest
      - name: Run tests
        run: |
          cp .env.example .env
          php artisan serve > storage/logs/server.log 2>&1 &
          docker run --name puth-test-image -d -p 7345:7345 puth-test-image
          timeout 10 bash -c 'until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:7345); do printf "." && sleep 1; done'
          php artisan migrate --force
          php artisan test
        env:
          RUNNING_IN_CI: true

      - name: Collect logs
        if: always()
        run: |
          docker logs puth-test-image > storage/logs/puth-${{ matrix.php }}-${{ matrix.laravel }}.log || true
          mv storage/logs/server.log storage/logs/server-${{ matrix.php }}-${{ matrix.laravel }}.log || true
          mv storage/logs/laravel.log storage/logs/laravel-${{ matrix.php }}-${{ matrix.laravel }}.log || true
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: |
            workspaces/clients/php/workspaces/laravel/storage/logs/puth-${{ matrix.php }}-${{ matrix.laravel }}.log
            workspaces/clients/php/workspaces/laravel/storage/logs/server-${{ matrix.php }}-${{ matrix.laravel }}.log
            workspaces/clients/php/workspaces/laravel/storage/logs/laravel-${{ matrix.php }}-${{ matrix.laravel }}.log
#  
#  publish-docker:
#    name: 'Publish image seuh/puth'