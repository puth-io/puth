name: Tests
on:
  push:
    branches:
      - master
      - develop
      - client/php
  pull_request:
    branches: 
      - master

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: 'Cache'
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            workspaces/puth/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-
      - name: yarn build
        run: |
          pwd
          echo ~
          yarn config
          yarn
          lerna run build
          lerna run postbuild
      - name: Build image
        run: |
          yarn workspaces focus --production puth
          rm -rf workspaces/puth/node_modules
          mv node_modules workspaces/puth
          cd workspaces/puth
          docker build --file Dockerfile --tag puth-test-image --output type=docker,dest=puth-test-image.tar .
      - name: Test image
        run: |
          yarn
          docker run -d -p 7345:7345 puth-test-image
          PUTH_URL=http://127.0.0.1:7345 lerna run test:only:remote
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: puth-test-image
          path: puth-test-image.tar

  test-client-laravel:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: puth-test-image
#          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input puth-test-image.tar
          docker image ls -a

#  test-puth-node:
#    needs: build
#    name: 'Test Puth (Node.js v${{ matrix.node-version }})'
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version:
#          - 14
#          - 16
#          - 18
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: '${{ matrix.node-version }}'
#      - name: 'Cache'
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#            ${{ runner.os }}-node-v${{ matrix.node }}-
#      - name: Install Dependencies
#        run: |
#          yarn
#      - name: Build
#        run: lerna run build
#      - name: Test
#        run: lerna run test
